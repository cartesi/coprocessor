
version: "3"

secrets:
  anvil_fork_url_holesky:
    file: anvil_fork_url_holesky.txt

networks:
  coprocessor-network:
    name: coprocessor-network
    driver: bridge

services:
  anvil:
    build:
      context: .
      dockerfile: Dockerfile-anvil-latest
    container_name: anvil
    ports:
      - 127.0.0.1:8545:8545
    volumes:
      - ./:/cartesi-lambada-coprocessor/
    command: /cartesi-lambada-coprocessor/env/eigenlayer/anvil/run-anvil-holesky.sh

    healthcheck:

      test: bash -c "[ -f /cartesi-lambada-coprocessor/env/eigenlayer/anvil/holesky-fork-operators-ready.flag ]"
      interval: 3s
      retries: 300
      start_period: 15s

    networks:
      coprocessor-network:
        aliases:
          - anvil
    secrets:
      - anvil_fork_url_holesky

  operator:
    image: ghcr.io/zippiehq/cartesi-coprocessor-operator:latest
    container_name: cartesi-coprocessor-operator
    ports:
      - 127.0.0.1:3033:3033
      - 127.0.0.1:5001:5001
    depends_on:
      anvil:
        condition: service_healthy
      setup-operator:
        condition: service_completed_successfully
    volumes:
      - ./demo-task:/operator/demo-task
    environment:
      SNAPSHOT_DIR: demo-task
      BLS_PRIVATE_KEY: ${OPERATOR_BLS_KEY:-13219903133444082589215719304558031505888625714969126489655808257015621956774}
      IPFS_DAEMON_OFFLINE: ${IPFS_DAEMON_ONLINE-true}
    networks:
      - coprocessor-network

  setup-operator:
    image: ghcr.io/zippiehq/cartesi-coprocessor-operator:latest
    container_name: cartesi-coprocessor-setup-operator
    depends_on:
      anvil:
        condition: service_healthy
    volumes:
      - ./contracts/script/input/holesky_eigenlayer_deployment.json:/operator/contracts/script/input/holesky_eigenlayer_deployment.json
      - ./contracts/script/input/holesky_fork_coprocessor_deployment.json:/operator/contracts/script/output/holesky_fork_coprocessor_deployment.json
    environment:
      OPERATOR_BLS_KEY: ${OPERATOR_BLS_KEY:-13219903133444082589215719304558031505888625714969126489655808257015621956774}
    command: >
      bash -c  "/operator/setup-operator
      --el-deployment-file-path contracts/script/input/holesky_eigenlayer_deployment.json
      --avs-deployment-file-path contracts/script/output/holesky_fork_coprocessor_deployment.json
      --operator-private-key 0x507dedda46e52e1145b3a81963b6a12b6abf667e85e4eee20b09a2dd294075d2
      --operator-socket http://operator:3033
      --el-node-url http://anvil:8545"
    networks:
      - coprocessor-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: db
    networks:
      - coprocessor-network

  solver:
    image: ghcr.io/zippiehq/cartesi-coprocessor-solver:latest
    container_name: cartesi-coprocessor-solver
    ports:
      - 127.0.0.1:3034:3034
    depends_on:
      anvil:
        condition: service_healthy
      setup-operator:
        condition: service_completed_successfully
    volumes:
      - ./config-holesky.toml:/cartesi-coprocessor-solver/config.toml
    environment:
      - RUST_LOG=trace
    networks:
      - coprocessor-network

  otterscan:
    image: otterscan/otterscan:v2.6.1
    ports:
      - 127.0.0.1:5100:80
    environment:
      ERIGON_URL: http://127.0.0.1:8545
      OTTERSCAN_CONFIG: | 
        { 
          "erigonURL": "http://127.0.0.1:8545", 
          "sourcifySources": { 
            "ipfs": "http://127.0.0.1:5555/repository", 
            "central_server": "http://127.0.0.1:5555/repository" 
          }
        }
    depends_on:
      anvil:
        condition: service_healthy
      setup-operator:
        condition: service_completed_successfully
    networks:
      - coprocessor-network

  sourcify:
    image: ghcr.io/ethereum/sourcify/server:latest
    ports:
      - 127.0.0.1:5555:5555
    volumes:
      - ./sourcify-chains.json:/home/app/services/server/dist/sourcify-chains.json
      - ./local.js:/home/app/services/server/dist/config/local.js
    environment:
      NODE_ENV: production
    depends_on:
      anvil:
        condition: service_healthy
      setup-operator:
        condition: service_completed_successfully
    networks:
      - coprocessor-network
  
  foundry:
    image: ghcr.io/foundry-rs/foundry
    platform: linux/amd64
    depends_on:
      anvil:
        condition: service_healthy
      setup-operator:
        condition: service_completed_successfully
    volumes:
      - ./contracts:/contracts
    entrypoint: sh
    command: >
      -c "cd contracts && forge verify-contract 0x2ac430E52F47420A00984E11Ef0DDba80652419a src/Coprocessor.sol:Coprocessor --verifier sourcify --verifier-url http://sourcify:5555 --rpc-url http://anvil:8545 --chain-id 17000 --constructor-args 0x0000000000000000000000001613beb3b2c4f22ee086b2b38c1476a3ce7f78e8 --num-of-optimizations 200 --compiler-version 0.8.12 --evm-version london
      && forge verify-contract 0x512a0E8bAeb6Ac3D52A11780c92517627005b0b1 lib/eigenlayer-middleware/lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy --verifier sourcify --verifier-url http://sourcify:5555 --rpc-url http://anvil:8545 --chain-id 17000 --constructor-args 0x000000000000000000000000c3e53f4d16ae77db1c982e75a937b9f60fe6369000000000000000000000000067d269191c92caf3cd7723f116c85e6e9bf5593300000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000 --num-of-optimizations 200 --compiler-version 0.8.12 --evm-version london"
    networks:
      - coprocessor-network